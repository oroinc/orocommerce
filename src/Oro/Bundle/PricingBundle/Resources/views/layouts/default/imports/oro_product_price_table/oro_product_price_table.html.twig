{% block __oro_product_price_table__product_price_table_container_scroll_widget %}
    {% set flatData = [] %}
    {% set uniqueUnits = [] %}
    {% for price in productPrices %}
        {% if price.formatted_unit is defined %}
            {% set itemExisit = flatData|filter(item => item.quantity is defined and item.quantity == price.quantity) %}
            {% set unit = price.formatted_unit %}
            {% if itemExisit|length %}
                {% set itemExisit = itemExisit|first %}
                {% set item = []|merge({(unit): price}) %}
                {% set itemExisit = itemExisit|merge({
                    'units': itemExisit['units']|merge(item)
                }) %}
                {% set flatData = flatData|map(item => item.quantity == itemExisit.quantity ? itemExisit : item) %}
                {% if unit not in uniqueUnits %}
                    {% set uniqueUnits = uniqueUnits|merge({(unit): price}) %}
                {% endif %}
            {% else %}
                {% set item = {
                    'quantity': price.quantity,
                    'units': {
                        (unit): price
                    }
                } %}
                {% set flatData = flatData|merge([item]) %}
                {% set uniqueUnits = uniqueUnits|merge({(unit): price}) %}
            {% endif %}
        {% endif %}
    {% endfor %}
    {% do block|merge_context({
        flatData: flatData,
        uniqueUnits: uniqueUnits
    }) %}
    {{ block_widget(block) }}
{% endblock %}

{% block __oro_product_price_table__product_price_multi_unit_table_widget %}
    {# Do not show tier prices table if there is only one unit and one tier #}
    {% set displayTiers = uniqueUnits|length > 1 or flatData|length > 1 %}
    {% if flatData|length == 1 %}
        {# Show if one row has multiple unit prices
           Qty Item   Set
           1+  $17.96 $10.50
        #}
        {% set displayTiers = flatData|first.units|default([])|length > 1 %}
    {% endif %}
    <div class="product-prices"
         data-page-component-view="oropricing/js/app/views/list-item-product-prices-view"
         data-page-component-options="{{ {
             showValuePrice: false,
             showListedPrice: false,
             showHint: false,
             modelAttr: {
                 prices: productPrices,
             }
         }|json_encode }}"
    >
        {% if displayTiers %}
            <div class="scrollable-container styled-scrollbar horizontal-scrolling"
                     data-page-component-view="orofrontend/js/app/views/scroll-shadow-view"
                     data-page-component-options="{{ {
                         scrollOffsets: {
                             'left': 'th:first'
                         }
                     }|json_encode }}"
                     data-scroll-target=""
                >
                    <table class="product-prices-table stick-first-row">
                        <thead class="product-prices-table__thead">
                        <tr>
                            <th class="product-prices-table__th text-left" scope="col">{{ 'oro.pricing.frontend.product.quantity.short_label'|trans }}</th>
                            {% for unit in uniqueUnits %}
                                <th class="product-prices-table__th text-right" scope="col">
                                    {% set showCurrencySymbol = currencies is defined and currencies|length > 1 %}
                                    {{- (showCurrencySymbol ? oro_currency_symbol(unit.currency) ~ ', ' : '') ~ unit.formatted_unit -}}
                                </th>
                            {% endfor %}
                        </tr>
                        </thead>
                        {{ block_widget(block) }}
                    </table>
                </div>
        {% endif %}
    </div>
{% endblock %}

{% block __oro_product_price_table__product_price_multi_unit_table_body_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': 'product-prices-table__tbody'
    }) %}
    {% if productPrices is not empty %}
        {% set attr = layout_attr_defaults(attr, {
            'itemprop': 'offers',
            'itemscope': '',
            'itemtype':'http://schema.org/Offer'
        }) %}
    {% endif %}

    {% set priceFormatOptions = {
        attributes: {
            fraction_digits: oro_locale_number_attribute('max_fraction_digits', 'currency')
        }
    } %}

    {% if uniqueUnits is defined and flatData is defined and flatData|length %}
        <tbody {{ block('block_attributes') }}>
            {% for dataItem in flatData|sort %}
                <tr class="product-prices-table__tr">
                    <td class="product-prices-table__td">
                        {{ dataItem.quantity ~ '+' }}
                    </td>
                    {% for unit in uniqueUnits %}
                        {% set item = dataItem.units|filter(item => item.unit is defined and item.unit == unit.unit)|first %}
                        <td class="product-prices-table__td text-right">
                            {% if item %}
                                <span class="hidden" aria-hidden="true" itemprop="priceSpecification" itemscope
                                      itemtype="http://schema.org/UnitPriceSpecification">
                                    <span itemprop="eligibleQuantity" itemscope
                                          itemtype="http://schema.org/QuantitativeValue">
                                        <span itemprop="value" content="{{ dataItem.quantity }}">{{ dataItem.quantity }}</span>
                                        <span class="hidden" aria-hidden="true" itemprop="unitCode">{{ item.formatted_unit }}</span>
                                    </span>
                                    <span itemprop="priceCurrency">{{ item.currency }}</span>
                                    <span itemprop="price">{{ item.price|number_format(priceFormatOptions.attributes.fraction_digits, '.', '') }}</span>
                                </span>
                                {{- item.formatted_price -}}
                            {% else %}
                                {{ '-' }}
                            {% endif %}
                        </td>
                    {% endfor %}
                </tr>
            {% endfor %}
        </tbody>
    {% endif %}
{% endblock %}

{% block __oro_product_price_table__product_price_single_unit_table_widget %}
    {% set avaliablePrices = productPrices|filter(price => price.formatted_unit is defined) %}
    {% if avaliablePrices|length %}
        {% set units = {} %}
        {% set displayTiers = false %}
        {% for price in avaliablePrices %}
            {% set unit = price.unit %}
            {% set units = units|merge({ (unit): (units[unit] is defined ? units[unit] + 1 : 1) }) %}
        {% endfor %}
        {% for val in units %}
            {# Do not show tier prices table if there is only one unit and one tier #}
            {% if val != 1 %}
                {% set displayTiers = true %}
            {% endif %}
        {% endfor %}
        <div class="product-prices"
             data-page-component-view="oropricing/js/app/views/list-item-product-prices-view"
             data-page-component-options="{{ {
                 showValuePrice: false,
                 showListedPrice: false,
                 showHint: false,
                 modelAttr: {
                     prices: productPrices,
                 }
             }|json_encode }}"
        >
        {% if displayTiers %}
            <div class="scrollable-container styled-scrollbar horizontal-scrolling"
                     data-page-component-view="orofrontend/js/app/views/scroll-shadow-view"
                     data-page-component-options="{{ {
                         scrollOffsets: {
                             'left': 'th:first'
                         }
                     }|json_encode }}"
                     data-scroll-target=""
                >
                    <div data-page-component-view="oropricing/js/app/views/price-single-unit-table-view"
                         data-page-component-options="{{ {
                             'prices': avaliablePrices,
                             'showCurrencySymbol': currencies is defined and currencies|length > 1
                         }|json_encode }}"
                    ></div>
                </div>
        {% endif %}
        </div>
    {% endif %}
{% endblock %}
