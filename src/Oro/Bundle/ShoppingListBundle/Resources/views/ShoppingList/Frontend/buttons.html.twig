{% macro addToCurrentButton(options) %}
    {% import _self as buttons %}
    {% set options = {
        defaultLabel: 'oro.shoppinglist.entity_label'|trans,
        actionLabel: 'oro.shoppinglist.actions.add_to_shopping_list_short'|trans
    }|merge(options) %}
    {{ buttons.getButton(options) }}
{% endmacro %}
{% macro addToButton(options) -%}
    {% import _self as buttons %}
    {% set options = {
        actionLabel: 'oro.shoppinglist.actions.add_to_shopping_list_short'|trans
    }|merge(options) %}
    {{ buttons.getButton(options) }}
{% endmacro %}

{% macro addToNewButton(options) %}
    {% import _self as buttons %}
    {% set dataAttributes = options.dataAttributes|merge({
        intention: 'new'
    }) %}
    {% set options = {
        actionLabel: 'oro.shoppinglist.actions.add_to_new_shopping_list'|trans
    }|merge(options)|merge({
        dataAttributes: dataAttributes
    }) %}
    {{ buttons.getButton(options) }}
{% endmacro %}

{% macro buttonTemplate(options) %}
    {% import '@OroFrontend/layouts/default/utils.html.twig' as utils %}
    {% import _self as buttons %}
    {{ utils.underscoreRaw(buttons.addToCurrentButton({
        shoppingList: {
            id: '<%- id %>',
            label: '<%- label %>'
        }
    }|merge(options))) }}
{% endmacro %}

{% macro getButton(options) %}
    {% import '@OroUI/layouts/macros.html.twig' as UI %}

    {% set options = {
        shoppingList: null,
        defaultLabel: '',
        ariaLabel: null,
        btnCss: '',
        dataAttributes: {}
    }|merge(options) %}

    {% set shoppingListId = options.shoppingList ? options.shoppingList.id : null %}
    {% set shoppingListLabel = options.shoppingList ? options.shoppingList.label : options.defaultLabel %}

    {% set dataAttributes = options.dataAttributes|merge({
        shoppinglist: {
            id: shoppingListId
        }
    }) %}

    {% set buttonOptions = {
        'type': options.type|default('submit'),
        'dataAttributes': dataAttributes,
        'btnCss': 'btn btn--block btn-main add-to-shopping-list-button ' ~ options.btnCss,
        'decoreClass': '',
        'moreButtonExtraClass': '',
        'dataId': shoppingListId,
        'label' : options.actionLabel|replace({
            '{{ shoppingList }}': shoppingListLabel
        }),
        'entityName': shoppingListLabel
    } %}

    {% if options.icon is defined %}
        {% set buttonOptions = buttonOptions|merge({
            'icon': options.icon
        }) %}
    {% endif %}
    {% if options.ariaLabel %}
        {% set buttonOptions = buttonOptions|merge({
            'ariaLabel': options.ariaLabel
        }) %}
    {% endif %}
    {% if options.dataUrl %}
        {% set buttonOptions = buttonOptions|merge({
            'dataUrl': options.dataUrl,
        }) %}
    {% endif %}
    {% if options.pageComponent is defined %}
        {% set buttonOptions = buttonOptions|merge({
            'pageComponent': options.pageComponent,
        }) %}
    {% endif %}
    {% if options.form is defined %}
        {% set buttonOptions = buttonOptions|merge({
            'form': options.form,
        }) %}
    {% endif %}

    <div class="btn-group--flex btn-group--full icons-holder btn-group--loading">
        {{ UI.clientBtn(buttonOptions) }}
    </div>
{% endmacro %}

{% macro getButtonsHtml(options) %}
    {% import '@OroUI/macros.html.twig' as UI %}
    {% import _self as buttons %}
    {% set isShoppingListCreateEnabled =  (options.shoppingListCreateEnabled ?? true and feature_enabled('shopping_list_create') and is_granted('oro_shopping_list_frontend_create')) %}
    {% set showSingleAddToShoppingListButton = isShoppingListCreateEnabled or not is_authenticated() %}
    {% set shoppingListRemoveEnabled = options.shoppingListRemoveEnabled is defined ? options.shoppingListRemoveEnabled : true %}
    {% set shoppingListUpdateEnabled = options.shoppingListUpdateEnabled is defined ? options.shoppingListUpdateEnabled : true %}
    {% set shoppingListAddToEnabled = options.shoppingListAddToEnabled is defined ? options.shoppingListAddToEnabled : true %}

    <div class="btn-group product-add-to-shopping-list-container"
         {{ UI.renderPageComponentAttributes({
             module: 'oroui/js/app/components/view-component',
             options: {
                 view: options.componentModule|default('oroshoppinglist/js/app/views/product-add-to-shopping-list-view'),
                 buttonTemplate: '<%#' ~ buttons.buttonTemplate(options.current) ~ '#%>',
                 removeButtonTemplate: options.remove is defined ? '<%#' ~ buttons.buttonTemplate(options.remove) ~ '#%>',
                 createNewButtonTemplate: '<%#' ~ buttons.buttonTemplate(options.new) ~ '#%>',
                 shoppingListAddToEnabled: shoppingListAddToEnabled,
                 shoppingListCreateEnabled: isShoppingListCreateEnabled,
                 shoppingListRemoveEnabled: shoppingListRemoveEnabled,
                 shoppingListUpdateEnabled: shoppingListUpdateEnabled,
                 showSingleAddToShoppingListButton: showSingleAddToShoppingListButton,
                 emptyMatrixAllowed: oro_config_value('oro_product.matrix_form_allow_empty')
             }|merge(options.componentOptions|default({}))
         }) }}
        >
        {% if options.shoppingLists is not empty %}
            {% set existingShoppingLists = [] %}
            {% for shoppingList in options.shoppingLists %}
                {% if shoppingList.current and shoppingListAddToEnabled %}
                    {{ buttons.addToCurrentButton(options.current|merge({shoppingList: shoppingList})) }}
                {% else %}
                    {%  set existingShoppingLists = existingShoppingLists|merge([shoppingList]) %}
                {% endif %}
            {% endfor %}
            {% if shoppingListAddToEnabled %}
                {% for shoppingList in existingShoppingLists %}
                    {{ buttons.addToButton(options.existing|merge({shoppingList: shoppingList})) }}
                {% endfor %}
            {% endif %}
            {% if isShoppingListCreateEnabled %}
                {{ buttons.addToNewButton(options.new) }}
            {% endif %}
        {% elseif showSingleAddToShoppingListButton %}
            {% set aCss = options.singleButtonACss is defined ? options.singleButtonACss : "" %}
            {{ buttons.addToCurrentButton(options.current|merge({shoppingList: null, aCss: aCss})) }}
        {% endif %}
    </div>
{% endmacro %}

{% macro getQuickSearchHtml(options) %}
    <div data-page-component-view="oroshoppinglist/js/app/views/shopping-list-quick-search"
         data-page-component-options="{{ {
             minimumResultsForSearch: options.minimumResultsForSearch|default(5)
         }|json_encode }}"
         class="{{ options.quickSearchRootClass|default('dropdown-search') }} hide"
         data-intention="search"
    ></div>
{% endmacro %}
