{% macro transitionAttributes(transitionData, checkout, componentOptions) %}
{% apply spaceless %}
    {% import '@OroUI/macros.html.twig' as UI %}
    {# Simplified transitions handler specific for checkout logic #}
    {% set transition = transitionData.transition %}

    {% set pageComponentModule = transition.frontendOptions.page_component_module|default('orocheckout/js/app/components/transition-button-component') %}
    {% set pageComponentOptions = transition.frontendOptions.page_component_options|default({}) %}
    {% if componentOptions is iterable %}
        {% set pageComponentOptions = pageComponentOptions|merge(componentOptions) %}
    {% endif %}

    {{ UI.renderPageComponentAttributes({
        module: pageComponentModule,
        options: pageComponentOptions|merge({
            'enabled': transitionData.isAllowed,
            'hasForm': transition.hasForm(),
            'transitionUrl': path(
                'oro_checkout_frontend_checkout',
                {
                    id: checkout.id,
                    transition: transition.name
                }
            )
        })
    }) }}
{% endapply %}
{% endmacro %}

{% macro conditionMessages(transitionData) %}
    {% import _self as layout %}
    {% set hasErrors = transitionData.errors|length > 0 %}
    {% if hasErrors %}
        data-toggle="tooltip"
        data-title="{{ layout.transitionConditionMessages(transitionData)|escape }}"
        data-html="true"
        data-container="body"
        data-placement="top"
    {% endif %}
{% endmacro %}

{% macro transitionConditionMessages(transitionData) %}
    {% import '@OroUI/layouts/renderIcon.html.twig' as renderIcon %}
    {{ renderIcon.icon({name: 'alert-circle'}) }}
    {%- apply spaceless -%}
        <div>{{ 'oro.checkout.workflow.unavailable_transition.message'|trans }}</div>
        <ul class="list-style-position-inside">
            {% for error in transitionData.errors %}
                <li>{{ error.message|trans(error.parameters|default({}))|nl2br }}</li>
            {% endfor %}
        </ul>
    {%- endapply -%}
{% endmacro %}

{% block checkout_transition_back_widget %}
    {% import _self as layout %}
    {% import '@OroUI/layouts/renderIcon.html.twig' as renderIcon %}

    {% if transitionData is defined and transitionData %}
    {% set transitionUrl = path(
        'oro_checkout_frontend_checkout',
        {
            id: checkout.id,
            transition: transitionData.transition.name
        })
    %}

    {% set attr = layout_attr_defaults(attr, {
        '~class': " btn checkout-form__btn-back",
        'href': transitionUrl,
        'data-responsive-styler': '',
        'data-input-widget-options': {
            responsive: {
                'mobile-landscape': {
                    classes: 'btn btn--outlined checkout-form__btn-back'
                }
            }
        }
    }) %}

    <a {{ block('block_attributes') }}
        {{ layout.transitionAttributes(transitionData, checkout) }}
        {{ layout.conditionMessages(transitionData) }}
    >
        {{ renderIcon.icon({name: 'arrow-left'}) }}{{ 'oro.checkout.workflow.b2b_flow_checkout.transition.back.label'|trans }}
    </a>
    {% endif %}
{% endblock %}

{% block checkout_transition_continue_widget %}
    {% import _self as layout %}
    {% import '@OroUI/layouts/renderIcon.html.twig' as renderIcon %}

    {% if buttonCssStyle is not defined %}
        {% set buttonCssStyle = 'btn--outlined' %}
    {% endif %}

    {% if transitionData is defined and transitionData %}
        {% set attr = layout_attr_defaults(attr, {
            '~class': ' btn checkout-form__submit ' ~ buttonCssStyle,
            'type': 'submit'
        }) %}

        {% if not transitionData.isAllowed %}
            {% set attr = layout_attr_defaults(attr, {
                '~class': ' btn--disabled',
                'disabled': 'disabled'
            }) %}
        {% endif %}

        {% if form.vars.id is defined %}
            {% set attr = layout_attr_defaults(attr, {
                'form': form.vars.id
            }) %}
        {% endif %}

        {% if relatedCheckoutFormIds is defined %}
            {% set componentOptions = componentOptions|merge({
                relatedCheckoutFormIds: relatedCheckoutFormIds
            }) %}
        {% endif %}

        <div class="tooltip-container {{ containerClass|default('') }}" {{ layout.conditionMessages(transitionData) }}>
            <button {{ block('block_attributes') }} {{ layout.transitionAttributes(transitionData, checkout, componentOptions) }}>
                {{ transitionData.transition.label|trans({},'workflows') }}
                {% if showIcon is defined and showIcon %}
                    {{ renderIcon.icon({name: 'arrow-right'}) }}
                {% endif %}
            </button>
        </div>
    {% endif %}
{% endblock %}

{# Component added back for theme layout BC from version 6.0 #}
{% block checkout_transition_submit_widget %}
    {% import _self as layout %}

    {% if finalTransitionData is defined and finalTransitionData %}
        {% set buttonLabel = finalTransitionData.transition.label|trans({},'workflows') %}
    {% endif %}

    {% if transitionData is defined and transitionData %}
        {% set stepTo = steps[stepOrder + 1 < steps|length ? stepOrder + 1 : stepOrder] %}
        {% set finalStep = steps.toArray()|filter(step => step.final == true)|first %}

        {% set attr = layout_attr_defaults(attr, {
            '~class': ' btn btn--full checkout-form__submit',
            'type': 'submit'
        }) %}

        {% if (stepTo != null and not stepTo.final) or not transitionData.isAllowed %}
            {% set attr = layout_attr_defaults(attr, {
                '~class': ' btn--disabled',
                'disabled': 'disabled'
            }) %}
        {% endif %}

        {% if form.vars.id is defined %}
            {% set attr = layout_attr_defaults(attr, {
                'form': form.vars.id
            }) %}
        {% endif %}

        <div class="checkout__submit-button-container{% if (stepTo != null and stepTo.final) %} final-step{% endif %}">
            <div class="tooltip-container {{ containerClass|default('') }}" {{ layout.conditionMessages(transitionData) }}>
                <button {{ block('block_attributes') }} {{ layout.transitionAttributes(transitionData, checkout, componentOptions) }}>
                    {{ buttonLabel|default('oro.checkout.workflow.b2b_flow_checkout.transition.place_order.label')|trans }}
                    {% if showIcon is defined and showIcon %}
                        {{ renderIcon.icon({name: 'arrow-right'}) }}
                    {% endif %}
                </button>
            </div>

            {% if (stepTo != null and not stepTo.final) and transitionData.isAllowed %}
                <div class="caption-italic">{{ 'oro.checkout.workflow.b2b_flow_checkout.transition.complete.message'|trans }}</div>
            {% elseif stepTo != null and stepTo.final and not transitionData.isAllowed %}
                <div class="caption-italic">{{ 'oro.checkout.workflow.b2b_flow_checkout.transition.place_order.order_issues.message'|trans }}</div>
            {% endif %}
        </div>
    {% endif %}
{% endblock %}

{% block checkout_transition_step_edit_widget %}
    {% import _self as layout %}
    {% import '@OroUI/layouts/renderIcon.html.twig' as renderIcon %}

    {% if transitionData is defined and transitionData %}
    {% set transitionUrl = path(
        'oro_checkout_frontend_checkout',
        {
            id: checkout.id,
            transition: transitionData.transition.name
        })
    %}
    {% if transitionData.errors|length > 0 %}
        {% set transitionLabel = layout.transitionConditionMessages(transitionData) %}
    {% else %}
        {% set transitionLabel = transitionData.transition.label|trans({},'workflows') %}
    {% endif %}
    <a href="{{ transitionUrl }}" class="btn btn--simple-colored transition-step-edit-button"
       data-toggle="tooltip"
       data-title="{{ transitionLabel }}"
       data-html="true"
       data-container="body"
       aria-label="{{ transitionLabel }}"
       {{ layout.transitionAttributes(transitionData, checkout) }}
    >
        {{ renderIcon.icon({name: 'pencil', extraClass: 'tooltip-trigger'}) }}
    </a>
    {% endif %}
{% endblock %}
