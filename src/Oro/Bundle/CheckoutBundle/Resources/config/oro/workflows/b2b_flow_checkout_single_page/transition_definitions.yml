workflows:
    b2b_flow_checkout_single_page:
        transition_definitions:
            __start___definition:
                # Will be merged with __start___definition from base_transition_definitions.yml.
                actions:
                    - '@run_action_group':
                        action_group: b2b_flow_checkout_create_guest_customer_user
                        parameters_mapping:
                            checkout: $checkout
                    - '@assign_value': [$billing_address_has_shipping, $ship_to_billing_address]
                    - '@tree':
                        conditions:
                            '@empty': $billing_address
                        actions:
                            - '@call_service_method':
                                attribute: $.result.customerUserAddresses
                                service: 'oro_order.manager.order_address'
                                method: getGroupedAddresses
                                method_parameters: [$checkout, 'billing']
                            - '@call_service_method':
                                attribute: $billing_address
                                service: 'oro_order.manager.order_address'
                                method: updateFromAbstract
                                method_parameters: [$.result.customerUserAddresses.defaultAddress]
                    - '@tree':
                        conditions:
                            '@empty': $shipping_address
                        actions:
                            - '@call_service_method':
                                attribute: $.result.customerUserAddresses
                                service: 'oro_order.manager.order_address'
                                method: getGroupedAddresses
                                method_parameters: [$checkout, 'shipping']
                            - '@call_service_method':
                                attribute: $shipping_address
                                service: 'oro_order.manager.order_address'
                                method: updateFromAbstract
                                method_parameters: [$.result.customerUserAddresses.defaultAddress]
                    - '@run_action_group':
                        action_group: b2b_flow_checkout_update_billing_address
                        parameters_mapping:
                            checkout: $checkout
                            disallow_shipping_address_edit: $disallow_shipping_address_edit
                        results:
                            data.billing_address_has_shipping: $.billing_address_has_shipping
                    - '@run_action_group':
                        action_group: b2b_flow_checkout_update_shipping_address
                        parameters_mapping:
                            checkout: $checkout
                    - '@call_service_method':
                         service: oro_checkout.action.default_shipping_method_setter
                         method: setDefaultShippingMethod
                         method_parameters: [$checkout]
                    - '@run_action_group':
                        action_group: oro_update_shipping_price
                        parameters_mapping:
                            checkout: $checkout
                    - '@call_service_method':
                          service: oro_checkout.action.default_payment_method_setter
                          method: setDefaultPaymentMethod
                          method_parameters: [$checkout]

            save_state_definition:
                actions:
                    - '@assign_value':
                        conditions:
                            '@not':
                                - '@is_consents_accepted':
                                    acceptedConsents: $customerConsents
                        parameters: [$consents_available, true]
                    - '@assign_value':
                        conditions:
                            '@not_empty': $late_registration.email
                        parameters: [$email, $late_registration.email]
                    - '@assign_value': [$billing_address_has_shipping, $ship_to_billing_address]
                    - '@tree':
                        conditions:
                            '@empty': $billing_address
                        actions:
                            - '@call_service_method':
                                attribute: $.result.customerUserAddresses
                                service: 'oro_order.manager.order_address'
                                method: getGroupedAddresses
                                method_parameters: [$checkout, 'billing']
                            - '@call_service_method':
                                attribute: $billing_address
                                service: 'oro_order.manager.order_address'
                                method: updateFromAbstract
                                method_parameters: [$.result.customerUserAddresses.defaultAddress]
                    - '@tree':
                        conditions:
                            '@empty': $shipping_address
                        actions:
                            - '@call_service_method':
                                attribute: $.result.customerUserAddresses
                                service: 'oro_order.manager.order_address'
                                method: getGroupedAddresses
                                method_parameters: [$checkout, 'shipping']
                            - '@call_service_method':
                                attribute: $shipping_address
                                service: 'oro_order.manager.order_address'
                                method: updateFromAbstract
                                method_parameters: [$.result.customerUserAddresses.defaultAddress]
                    - '@run_action_group':
                        action_group: b2b_flow_checkout_update_billing_address
                        parameters_mapping:
                            checkout: $checkout
                            disallow_shipping_address_edit: $disallow_shipping_address_edit
                        results:
                            data.billing_address_has_shipping: $.billing_address_has_shipping
                    - '@run_action_group':
                        action_group: b2b_flow_checkout_update_shipping_address
                        parameters_mapping:
                            checkout: $checkout
                    - '@run_action_group':
                        action_group: oro_update_shipping_price
                        parameters_mapping:
                            checkout: $checkout
                    - '@tree':
                        conditions:
                            '@empty': $checkout.shippingCost
                        actions:
                            - '@unset_value': $checkout.shippingMethod
                            - '@call_service_method':
                                 service: oro_checkout.action.default_shipping_method_setter
                                 method: setDefaultShippingMethod
                                 method_parameters: [$checkout]
                    - '@delete_checkout_state':
                        entity: $checkout
                        token: $state_token
                    - '@generate_checkout_state_snapshot':
                        entity: $checkout
                        attribute: $.result.currentCheckoutState
                    - '@save_checkout_state':
                        entity: $checkout
                        state: $.result.currentCheckoutState
                        token: $state_token
                    - '@assign_value': [$.result.responseData.stateSaved, true]

            create_order_transition_definition:
                preactions:
                    - '@call_service_method':
                        conditions:
                            '@blank': $.result.paymentContext
                        parameters:
                            service: oro_checkout.provider.payment_context
                            method: getContext
                            method_parameters: [$checkout]
                            attribute: $.result.paymentContext
                    - '@run_action_group':
                        action_group: order_line_items_not_empty
                        parameters_mapping:
                            checkout: $checkout
                        results:
                            result.orderLineItemsNotEmpty: $.orderLineItemsNotEmpty
                            result.orderLineItemsNotEmptyForRfp: $.orderLineItemsNotEmptyForRfp
                    - '@tree':
                        conditions:
                            '@blank': $.result.extendableConditionCheckout
                        actions:
                            - '@assign_value': [$.result.extendableConditionCheckout, false]
                            - '@assign_value':
                                conditions:
                                    '@extendable':
                                        events: ['extendable_condition.checkout']
                                parameters: [$.result.extendableConditionCheckout, true]
                    - '@tree':
                        conditions:
                            '@blank': $.result.extendableConditionPreOrderCreate
                        actions:
                            - '@assign_value': [$.result.extendableConditionPreOrderCreate, false]
                            - '@assign_value':
                                conditions:
                                    '@extendable':
                                        events: ['extendable_condition.pre_order_create']
                                parameters: [$.result.extendableConditionPreOrderCreate, true]
                    - '@tree':
                        conditions:
                            '@blank': $.result.hasApplicablePaymentMethods
                        actions:
                            - '@assign_value': [$.result.hasApplicablePaymentMethods, false]
                            - '@assign_value':
                                conditions:
                                    '@has_applicable_payment_methods': $.result.paymentContext
                                parameters: [$.result.hasApplicablePaymentMethods, true]
                    - '@tree':
                        conditions:
                            '@not_blank': $checkout.shippingMethod
                        actions:
                            - '@assign_value': [$.result.shippingMethodHasEnabledShippingRules, false]
                            - '@assign_value':
                                conditions:
                                    '@shipping_method_has_enabled_shipping_rules': $checkout.shippingMethod
                                parameters: [$.result.shippingMethodHasEnabledShippingRules, true]
                    - '@flash_message':
                        conditions:
                            '@and':
                                - '@equal': [$payment_in_progress, true]
                                - '@equal': [$checkout.completed, false]
                                - '@check_request':
                                    parameters:
                                        is_ajax: false
                                - '@not':
                                    - '@check_request':
                                        parameters:
                                            expected_key: transition
                                            expected_value: purchase
                        message: oro.checkout.workflow.condition.payment_has_not_been_processed.message
                        type: 'warning'
                    - '@assign_url':
                        conditions:
                            '@blank': $.result.saveStateUrl
                        parameters:
                            attribute: $.result.saveStateUrl
                            route: oro_checkout_frontend_checkout
                            route_parameters:
                                id: $checkout.id
                                transition: 'save_state'

                preconditions:
                    '@and':
                        - '@equal': [$checkout.completed, false]
                        - '@equal':
                            parameters: [$.result.orderLineItemsNotEmptyForRfp, true]
                            message: oro.checkout.workflow.condition.order_line_items_not_empty.not_allow_rfp.message
                        - '@equal':
                            parameters: [$.result.orderLineItemsNotEmpty, true]
                            message: oro.checkout.workflow.condition.order_line_items_not_empty.allow_rfp.message
                        - '@equal':
                            parameters: [$.result.hasApplicablePaymentMethods, true]
                            message: oro.checkout.workflow.condition.payment_method_was_not_selected.message
                        - '@and':
                            - '@not_blank': $checkout.shippingMethod
                            - '@equal':
                                parameters: [$.result.shippingMethodHasEnabledShippingRules, true]
                                message: oro.checkout.workflow.condition.shipping_method_is_not_available.message
                        - '@quote_acceptable': [$checkout.sourceEntity, true]
                        - '@equal': [$.result.extendableConditionCheckout, true]
                        - '@equal': [$.result.extendableConditionPreOrderCreate, true]

                conditions:
                    '@and':
                        - '@check_request':
                            message: oro.checkout.workflow.condition.invalid_request.message
                            parameters:
                                is_ajax: true
                                expected_key: _wid
                                expected_value: ajax_checkout
                        - '@is_checkout_state_valid':
                            message: oro.checkout.workflow.condition.content_of_order_was_changed.message
                            parameters:
                                entity: $checkout
                                token: $state_token
                                current_state: $.result.currentCheckoutState
                        - '@is_consents_accepted':
                            acceptedConsents: $customerConsents
                            message: oro.checkout.workflow.condition.required_consents_should_be_checked_on_single_page_checkout.message
                            type: 'warning'
                        - '@extendable':
                            message: 'oro.checkout.workflow.b2b_flow_checkout.transition.place_order.condition.extendable.message'
                            events:
                                - 'extendable_condition.before_order_create'
                        - '@validate_checkout_addresses':
                            parameters: $checkout
                        - '@not_empty':
                            message: oro.checkout.workflow.condition.shipping_method_is_not_available.message
                            parameters: $checkout.shippingMethod
                        - '@not_empty':
                            message: oro.checkout.workflow.condition.payment_method_was_not_selected.message
                            parameters: $checkout.paymentMethod
                        - '@payment_method_applicable':
                            message: oro.checkout.workflow.condition.payment_method_was_not_selected.message
                            payment_method: $checkout.paymentMethod
                            context: $.result.paymentContext

                actions:
                    - '@save_accepted_consents':
                        acceptedConsents: $customerConsents

                    - '@run_action_group':
                        action_group: oro_update_shipping_price
                        parameters_mapping:
                            checkout: $checkout

                    - '@run_action_group':
                        action_group: b2b_flow_checkout_place_order
                        parameters_mapping:
                            checkout: $checkout
                        results:
                            data.order: $.order

                    - '@assign_constant_value': [$.result.validateAction, Oro\Bundle\PaymentBundle\Method\PaymentMethodInterface::VALIDATE]
                    - '@tree':
                        conditions:
                            '@and':
                                - '@equal': [$payment_validate, true]
                                - '@payment_method_supports':
                                    payment_method: $checkout.paymentMethod
                                    action: $.result.validateAction
                        actions:
                             # validate payment
                            - '@assign_url':
                                attribute: $.result.successUrl
                                route: oro_checkout_frontend_checkout
                                route_parameters:
                                    id: $checkout.id
                                    transition: 'purchase'
                            - '@assign_url':
                                attribute: $.result.failureUrl
                                route: oro_checkout_frontend_checkout
                                route_parameters:
                                    id: $checkout.id
                                    transition: 'payment_error'
                            - '@payment_validate':
                                attribute: $.result.responseData
                                object: $checkout
                                paymentMethod: $checkout.paymentMethod
                                transactionOptions:
                                    saveForLaterUse: $payment_save_for_later
                                    successUrl: $.result.successUrl
                                    failureUrl: $.result.failureUrl
                                    additionalData: $additional_data
                                    checkoutId: $checkout.id

                    - '@run_action_group':
                        action_group: b2b_flow_checkout_update_guest_customer_user
                        parameters_mapping:
                            checkout: $checkout
                            email: $email
                            billing_address: $billing_address

                    - '@assign_value':
                        conditions:
                            '@and':
                                - '@not_equal': [$payment_validate, false]
                                - '@not_equal':
                                    - $.result.responseData[successful]
                                    - true
                                - '@payment_method_supports':
                                    payment_method: $checkout.paymentMethod
                                    action: $.result.validateAction
                        parameters: [$.result.updateCheckoutState, true]

                    - '@tree':
                        conditions:
                            '@or':
                                - '@equal': [$payment_validate, false]
                                - '@equal':
                                    - $.result.responseData[successful]
                                    - true
                                - '@not':
                                    - '@payment_method_supports':
                                        payment_method: $checkout.paymentMethod
                                        action: $.result.validateAction
                        actions:
                            - '@get_available_workflow_by_record_group':
                                attribute: $.result.currentWorkflow
                                entity_class: 'Oro\Bundle\CheckoutBundle\Entity\Checkout'
                                group_name: 'b2b_checkout_flow'
                            - '@transit_workflow':
                                entity: $checkout
                                transition: purchase
                                workflow: $.result.currentWorkflow.name
                                if_allowed: true

            purchase_transition_definition:
                preactions:
                    - '@call_service_method':
                        conditions:
                            '@blank': $.result.paymentContext
                        parameters:
                            service: oro_checkout.provider.payment_context
                            method: getContext
                            method_parameters: [$checkout]
                            attribute: $.result.paymentContext
                    - '@tree':
                        conditions:
                            '@check_request':
                                parameters:
                                    expected_key: transition
                                    expected_value: purchase
                        actions:
                            - '@run_action_group':
                                action_group: order_line_items_not_empty
                                parameters_mapping:
                                    checkout: $checkout
                                results:
                                    result.orderLineItemsNotEmpty: $.orderLineItemsNotEmpty
                                    result.orderLineItemsNotEmptyForRfp: $.orderLineItemsNotEmptyForRfp
                            - '@tree':
                                conditions:
                                    '@blank': $.result.extendableConditionCheckout
                                actions:
                                    - '@assign_value': [$.result.extendableConditionCheckout, false]
                                    - '@assign_value':
                                        conditions:
                                            '@extendable':
                                                events: ['extendable_condition.checkout']
                                        parameters: [$.result.extendableConditionCheckout, true]
                            - '@tree':
                                conditions:
                                    '@blank': $.result.extendableConditionBeforeOrderCreate
                                actions:
                                    - '@assign_value': [$.result.extendableConditionBeforeOrderCreate, false]
                                    - '@assign_value':
                                        conditions:
                                            '@extendable':
                                                events: ['extendable_condition.before_order_create']
                                        parameters: [$.result.extendableConditionBeforeOrderCreate, true]
                            - '@tree':
                                  conditions:
                                      '@blank': $.result.hasApplicablePaymentMethods
                                  actions:
                                      - '@assign_value': [$.result.hasApplicablePaymentMethods, false]
                                      - '@assign_value':
                                            conditions:
                                                '@has_applicable_payment_methods': $.result.paymentContext
                                            parameters: [$.result.hasApplicablePaymentMethods, true]
                            - '@tree':
                                conditions:
                                    '@blank': $.result.paymentMethodApplicable
                                actions:
                                    - '@assign_value': [$.result.paymentMethodApplicable, false]
                                    - '@assign_value':
                                        conditions:
                                            '@payment_method_applicable':
                                                payment_method: $checkout.paymentMethod
                                                context: $.result.paymentContext
                                        parameters: [$.result.paymentMethodApplicable, true]
                            - '@tree':
                                conditions:
                                    '@blank': $.result.shippingMethodHasEnabledShippingRules
                                actions:
                                    - '@assign_value': [$.result.shippingMethodHasEnabledShippingRules, false]
                                    - '@assign_value':
                                        conditions:
                                            '@shipping_method_has_enabled_shipping_rules': $checkout.shippingMethod
                                        parameters: [$.result.shippingMethodHasEnabledShippingRules, true]
                    - '@assign_constant_value': [$.result.validateAction, Oro\Bundle\PaymentBundle\Method\PaymentMethodInterface::VALIDATE]
                    - '@call_service_method':
                        conditions:
                            '@blank': $.result.validatePaymentTransaction
                        parameters:
                            service: oro_payment.provider.payment_transaction
                            method: getActiveValidatePaymentTransaction
                            method_parameters: [$payment_method]
                            attribute: $.result.validatePaymentTransaction

                conditions:
                    '@and':
                        - '@equal': [$checkout.completed, false]
                        - '@not_empty': $order
                        - '@or':
                            - '@not_empty': [$.result.validatePaymentTransaction]
                            - '@not':
                                - '@payment_method_supports':
                                    payment_method: $checkout.paymentMethod
                                    action: $.result.validateAction

                        # Checks the following conditions only if transition was initiated via direct URL.
                        - '@or':
                            - '@not':
                                - '@check_request':
                                    parameters:
                                        expected_key: transition
                                        expected_value: purchase
                            - '@and':
                                - '@equal':
                                    parameters: [$.result.orderLineItemsNotEmptyForRfp, true]
                                    message: oro.checkout.workflow.condition.order_line_items_not_empty.not_allow_rfp.message
                                - '@equal':
                                    parameters: [$.result.orderLineItemsNotEmpty, true]
                                    message: oro.checkout.workflow.condition.order_line_items_not_empty.allow_rfp.message
                                - '@equal':
                                      parameters: [$.result.shippingMethodHasEnabledShippingRules, true]
                                      message: oro.checkout.workflow.condition.shipping_method_is_not_available.message
                                - '@equal':
                                      parameters: [$.result.hasApplicablePaymentMethods, true]
                                      message: oro.checkout.workflow.condition.has_applicable_payment_methods.message
                                - '@equal':
                                      parameters: [$.result.paymentMethodApplicable, true]
                                      message: oro.checkout.workflow.condition.applicable_payment_method.message
                                - '@quote_acceptable': [$checkout.sourceEntity, true]
                                - '@equal': [$.result.extendableConditionCheckout, true]
                                - '@equal': [$.result.extendableConditionBeforeOrderCreate, true]

                actions:
                    - '@assign_value': [$payment_in_progress, true]

                    - '@run_action_group':
                        action_group: b2b_flow_checkout_purchase
                        parameters_mapping:
                            checkout: $checkout
                            order: $order
                            transactionOptions:
                                additionalData: $additional_data
                                email: $email
                        results:
                            result.responseData: $.responseData

                    - '@extendable':
                        events: [extendable_action.finish_checkout]

                    - '@redirect':
                        conditions:
                            '@equal':
                                - true
                                - $.result.responseData[purchaseSuccessful]
                        route: oro_checkout_frontend_checkout
                        route_parameters:
                            id: $checkout.id
                            transition: 'finish_checkout'
                    - '@redirect':
                        conditions:
                            '@equal':
                                - false
                                - $.result.responseData[purchaseSuccessful]
                        route: oro_checkout_frontend_checkout
                        route_parameters:
                            id: $checkout.id
                            transition: payment_error

            finish_checkout_definition:
                conditions:
                    '@and':
                        - '@not_empty': [$order]
                        - '@equal': [$payment_in_progress, true]

                actions:
                    - '@run_action_group':
                        action_group: handle_late_registration
                        parameters_mapping:
                            checkout: $checkout
                            order: $order
                            late_registration_data: $late_registration
                    - '@run_action_group':
                        action_group: b2b_flow_checkout_finish_checkout
                        parameters_mapping:
                            checkout: $checkout
                            order: $order
                            auto_remove_source: $auto_remove_source
                            allow_manual_source_remove: $allow_manual_source_remove
                            remove_source: $remove_source
                            clear_source: $clear_source
                    - '@delete_checkout_state':
                          entity: $checkout
