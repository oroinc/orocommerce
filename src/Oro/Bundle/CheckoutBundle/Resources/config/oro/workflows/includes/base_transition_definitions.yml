#Consider this workflow is reused in standart and single page checkout workflows
workflows:
    b2b_flow_checkout:
        transition_definitions:
            __start___definition:
                actions:
                    - '@assign_value': [$shipping_method, null]
                    - '@assign_value': [$payment_save_for_later, true]
                    - '@delete_checkout_state':
                        conditions:
                            '@not_blank': $state_token
                        parameters:
                            entity: $checkout
                            token: $state_token
                    - '@generate_uuid':
                        conditions:
                            '@blank': $state_token
                        parameters:
                          attribute: $state_token

            start_from_quickorderform_definition:
                preactions:
                    - '@call_service_method':
                       conditions:
                           '@blank': $.result.isAllowed
                       parameters:
                            attribute: $.result.isAllowed
                            service: oro_shopping_list.processor.quick_add_to_checkout
                            method: isAllowed
                    - '@call_service_method':
                       conditions:
                           '@blank': $.result.isReachedLimit
                       parameters:
                           attribute: $.result.isReachedLimit
                           service: oro_shopping_list.manager.shopping_list_limit
                           method: isReachedLimit
                    - '@call_service_method':
                       conditions:
                           '@blank': $.result.shoppingListLimit
                       parameters:
                           attribute: $.result.shoppingListLimit
                           service: oro_shopping_list.manager.shopping_list_limit
                           method: getShoppingListLimitForUser
                    - '@call_service_method':
                       conditions:
                           '@blank': $.result.isCheckoutAllowed
                       parameters:
                            service: oro_checkout.condition.is_workflow_start_from_shopping_list_allowed
                            method: isAllowedForAny
                            attribute: $.result.isCheckoutAllowed
                    - '@call_service_method':
                       conditions:
                           '@blank': $.result.isCurrentShoppingListEmpty
                       parameters:
                           service: oro_shopping_list.manager.current_shopping_list
                           method: isCurrentShoppingListEmpty
                           attribute: $.result.isCurrentShoppingListEmpty
                    - '@assign_value': [$.result.doShowConfirmation, false]
                    - '@assign_value':
                        conditions:
                          '@and':
                            - '@equal': [$.result.isReachedLimit, true]
                            - '@equal': [$.result.isCurrentShoppingListEmpty, false]
                        parameters: [$.result.doShowConfirmation, true]

                preconditions:
                    '@and':
                        - '@equal': [true, $.result.isAllowed]
                        - '@equal': [true, $.result.isCheckoutAllowed]

                actions:
                    - '@delete_checkout_state':
                        conditions:
                            '@not_blank': $state_token
                        parameters:
                            entity: $checkout
                            token: $state_token

            start_from_shoppinglist_definition:
                preactions:
                    - '@find_entity':
                        conditions:
                            '@and':
                                - '@not_blank': $init_context
                                - '@blank': $.result.shoppingList
                        parameters:
                            class: $init_context.entityClass
                            identifier: $init_context.entityId
                            attribute: $.result.shoppingList
                    - '@tree':
                        conditions:
                            '@and':
                                - '@not_blank': $.result.shoppingList
                                - '@blank': $.result.extendableConditionShoppingListStart
                        actions:
                            - '@assign_value': [$.result.extendableConditionShoppingListStart, false]
                            - '@assign_value':
                                conditions:
                                    '@extendable':
                                        events: [extendable_condition.shopping_list_start]
                                parameters: [$.result.extendableConditionShoppingListStart, true]
                    - '@call_service_method':
                        conditions:
                            '@blank': $isAllowed
                        parameters:
                            service: oro_checkout.condition.is_workflow_start_from_shopping_list_allowed
                            method: isAllowedForAny
                            attribute: $isAllowed
                    - '@call_service_method':
                        conditions:
                            '@and':
                                - '@not_blank': $.result.shoppingList
                                - '@blank': $.result.shoppingListHasEmptyMatrix
                        parameters:
                            service: oro_shopping_list.manager.empty_matrix_grid
                            method: hasEmptyMatrix
                            method_parameters: [$.result.shoppingList]
                            attribute: $.result.shoppingListHasEmptyMatrix
                    - '@call_service_method':
                        attribute: $isMinimumOrderAmountMet
                        service: oro_shopping_list.provider.order_limit
                        method: isMinimumOrderAmountMet
                        method_parameters: [$.result.shoppingList]
                    - '@call_service_method':
                        attribute: $isMaximumOrderAmountMet
                        service: oro_shopping_list.provider.order_limit
                        method: isMaximumOrderAmountMet
                        method_parameters: [$.result.shoppingList]

                preconditions:
                   '@and':
                       - '@equal': [$isAllowed, true]
                       - '@not_empty': $.result.shoppingList
                       - '@has_elements': $.result.shoppingList.lineItems
                       - '@equal': [$.result.extendableConditionShoppingListStart, true]
                       - '@equal': [$isMinimumOrderAmountMet, true]
                       - '@equal': [$isMaximumOrderAmountMet, true]

                actions:
                    - '@run_action_group':
                        action_group: start_shoppinglist_checkout
                        parameters_mapping:
                            shoppingList: $.result.shoppingList
                            showErrors: true
                        results:
                            data.checkout: $.checkout
                            result.redirectUrl: $.redirectUrl
                    - '@delete_checkout_state':
                        conditions:
                            '@not_blank': $state_token
                        parameters:
                            entity: $checkout
                            token: $state_token

            unblock_and_recalculate_definition:
                actions:
                    - '@assign_value':
                        - [$payment_method, null]
                        - [$payment_in_progress, false]
                    - '@generate_uuid': $state_token

            payment_error_definition:
                actions:
                    - '@assign_value':
                          - [$payment_method, null]
                          - [$payment_in_progress, false]
                    - '@remove_entity':
                        conditions:
                            '@not_empty': $order
                        parameters: [$order]
                    - '@unset_value': [$.data.order]
                    - '@generate_uuid': $state_token
